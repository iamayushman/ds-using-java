public class CircularCar {
    public static void main(String[] args) {
        int[] a1 = { 959, 329, 987, 951, 942, 410, 282, 376, 581, 507, 546, 299, 564,
                114, 474, 163, 953, 481, 337, 395,
                679, 21, 335, 846, 878, 961, 663, 413, 610, 937, 32, 831, 239, 899, 659, 718,
                738, 7, 209 };
        int[] b1 = { 862, 783, 134, 441, 177, 416, 329, 43, 997, 920, 289, 117, 573,
                672, 574, 797, 512, 887, 571, 657,
                420, 686, 411, 817, 185, 326, 891, 122, 496, 905, 910, 810, 226, 462, 759,
                637, 517, 237, 884 };

        int[] a2 = { 204, 918, 18, 17, 35, 739, 913, 14, 76, 555, 333, 535, 653, 667, 52, 987, 422, 553, 599, 765, 494,
                298, 16, 285, 272, 485, 989, 627, 422, 399, 258, 959, 475, 983, 535, 699, 663, 152, 606, 406, 173, 671,
                559, 594, 531, 824, 898, 884, 491, 193, 315, 652, 799, 979, 890, 916, 331, 77, 650, 996, 367, 86, 767,
                542, 858, 796, 264, 64, 513, 955, 669, 694, 382, 711, 710, 962, 854, 784, 299, 606, 655, 517, 376, 764,
                998, 244, 896, 725, 218, 663, 965, 660, 803, 881, 482, 505, 336, 279 };
        int[] b2 = { 273, 790, 131, 367, 914, 140, 727, 41, 628, 594, 725, 289, 205, 496, 290, 743, 363, 412, 644, 232,
                173, 8, 787, 673, 798, 938, 510, 832, 495, 866, 628, 184, 654, 296, 734, 587, 142, 350, 870, 583, 825,
                511, 184, 770, 173, 486, 41, 681, 82, 532, 570, 71, 934, 56, 524, 432, 307, 796, 622, 640, 705, 498,
                109, 519, 616, 875, 895, 244, 688, 283, 49, 946, 313, 717, 819, 427, 845, 514, 809, 422, 233, 753, 176,
                35, 76, 968, 836, 876, 551, 398, 12, 151, 910, 606, 932, 580, 795, 187 };

        int[] a3 = { 1, 2, 3, 4, 5 };
        int[] b3 = { 3, 4, 5, 1, 2 };
        int[] a4 = { 2, 3, 4 };
        int[] b4 = { 3, 4, 3 };
        int[] a5 = { 281, 381, 172, 748, 675, 332, 877, 835, 967, 357, 600, 188, 679, 82, 568, 189, 979, 619, 847, 648,
                518, 511, 794, 101, 780, 501, 608, 175, 957, 316, 778, 947, 528, 456, 667, 408, 831, 201, 905, 23, 308,
                0, 364 };
        int[] b5 = { 106, 777, 62, 424, 607, 40, 204, 604, 91, 590, 905, 587, 837, 491, 198, 819, 737, 528, 286, 989,
                602, 854, 611, 606, 903, 907, 255, 825, 641, 887, 225, 219, 625, 446, 809, 771, 733, 309, 283, 291, 298,
                401, 659 };
        int[] a6 = { 0 };
        int[] b6 = { 0 };
        int[] a7 = { 383, 521, 491, 907, 871, 705 };
        int[] b7 = { 96, 197, 592, 67, 77, 641 };

        int ret7 = -1; // canCompleteCircuit(a7, b7);
        int ret1 = -1; // canCompleteCircuit(a1, b1);
        int ret2 = -1; // canCompleteCircuit(a2, b2);
        int ret3 = -1; // canCompleteCircuit(a3, b3);
        int ret4 = canCompleteCircuit(a4, b4);
        int ret5 = -1; // canCompleteCircuit(a5, b5);
        int ret6 = -1; // canCompleteCircuit(a6, b6);
        System.out.println(
                "1:" + ret1 + " & 2:" + ret2 + " & 3:" + ret3 + " & 4:" + ret4 + " & 5:" + ret5 + " & 6:" + ret6
                        + " & 7:" + ret7);
    }

    public static int canCompleteCircuit(final int[] A, final int[] B) {
        int ret = -1;
        for (int i = 0; i < A.length; i++) {
            int carry = 0;
            boolean flag = false;
            int j = i;
            for (; j < B.length; j++) {

                int fuel = A[j] + carry;
                int cost = B[j];
                if (fuel == 0) {
                    if (cost == 0) {
                        return i;
                    }
                    flag = true;
                    break;
                }

                if (fuel >= cost) {
                    carry = (fuel - cost);
                } else {
                    flag = true;
                    break;
                }
                if (i == 0 && j == (B.length - 1)) {
                    break;
                }
                if (j == i - 1) {
                    break;
                }
                if (j == (B.length - 1)) {
                    j = 0;
                }
            }
            if (flag) {
                continue;
            } else {
                return i;
            }
        }
        return ret;
    }
}
